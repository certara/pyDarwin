{
    "NLME_0_01": {
        "control_file_name": "NLME_0_01.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_01.exe",
        "file_stem": "NLME_0_01",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    Aa = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  cfMicro(A1, Cl / V, first = (Aa = Ka))\n  C = A1 / V\n  dosepoint(Aa, idosevar = AaDose, infdosevar = AaInfDose, infratevar = AaInfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  ranef(diag(nCl) = c(1))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  ranef(diag(nV) = c(1))\n  stparm(Ka = tvKa * exp( nKa ))\n  fixef(tvKa= c(, 1, ))\n  ranef(diag(nKa) = c(1))\n  #search_block(nV, nCl, nKa)\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 0)])\n## Genotype: [0, 0]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 3,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 3,
            "model_code": {
                "FullBinCode": "0, 0, 0, 0, 0",
                "IntCode": "0, 0",
                "MinBinCode": "0, 0, 0, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 3,
            "phenotype": "([('PML', 0)])",
            "sigma_num": 1,
            "theta_num": 3
        },
        "model_num": 1,
        "output_file_name": "NLME_0_01_out.txt",
        "result": {
            "condition_num": 349.51086,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 516.178,
            "messages": "",
            "ofv": 346.178,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\01",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_02": {
        "control_file_name": "NLME_0_02.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_02.exe",
        "file_stem": "NLME_0_02",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    Aa = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  cfMicro(A1, Cl / V, first = (Aa = Ka))\n  C = A1 / V\n  dosepoint(Aa, idosevar = AaDose, infdosevar = AaInfDose, infratevar = AaInfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  stparm(Ka = tvKa * exp( nKa ))\n  fixef(tvKa= c(, 1, ))\n  #search_block(nV, nCl, nKa)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), diag(nKa) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 0)]), block: ((nV, nCl))\n## Genotype: [0, 1]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 4,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 3,
            "model_code": {
                "FullBinCode": "0, 0, 0, 0, 1",
                "IntCode": "0, 1",
                "MinBinCode": "0, 0, 0, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 4,
            "phenotype": "([('PML', 0)]), block: ((nV, nCl))",
            "sigma_num": 1,
            "theta_num": 3
        },
        "model_num": 2,
        "output_file_name": "NLME_0_02_out.txt",
        "result": {
            "condition_num": 44.29912,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 503.414,
            "messages": "",
            "ofv": 323.414,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\02",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_04": {
        "control_file_name": "NLME_0_04.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_04.exe",
        "file_stem": "NLME_0_04",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    Aa = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  cfMicro(A1, Cl / V, first = (Aa = Ka))\n  C = A1 / V\n  dosepoint(Aa, idosevar = AaDose, infdosevar = AaInfDose, infratevar = AaInfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  stparm(Ka = tvKa * exp( nKa ))\n  fixef(tvKa= c(, 1, ))\n  #search_block(nV, nCl, nKa)\n  ranef(block(nV, nCl, nKa) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 0)]), block: ((nV, nCl, nKa))\n## Genotype: [0, 3]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 6,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 3,
            "model_code": {
                "FullBinCode": "0, 0, 0, 1, 1",
                "IntCode": "0, 3",
                "MinBinCode": "0, 0, 0, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 6,
            "phenotype": "([('PML', 0)]), block: ((nV, nCl, nKa))",
            "sigma_num": 1,
            "theta_num": 3
        },
        "model_num": 4,
        "output_file_name": "NLME_0_04_out.txt",
        "result": {
            "condition_num": 1787.36243,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 624.55,
            "messages": "",
            "ofv": 324.55,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\04",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_06": {
        "control_file_name": "NLME_0_06.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_06.exe",
        "file_stem": "NLME_0_06",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    Aa = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  cfMicro(A1, Cl / V, first = (Aa = Ka))\n  C = A1 / V\n  dosepoint(Aa, idosevar = AaDose, infdosevar = AaInfDose, infratevar = AaInfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  stparm(Ka = tvKa * exp( nKa ))\n  fixef(tvKa= c(, 1, ))\n  #search_block(nV, nCl, nKa)\n  ranef(diag(nV) = c(1.0), block(nCl, nKa) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 0)]), block: ((nCl, nKa))\n## Genotype: [0, 5]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 4,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 3,
            "model_code": {
                "FullBinCode": "0, 0, 1, 0, 1",
                "IntCode": "0, 5",
                "MinBinCode": "0, 0, 1, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 4,
            "phenotype": "([('PML', 0)]), block: ((nCl, nKa))",
            "sigma_num": 1,
            "theta_num": 3
        },
        "model_num": 6,
        "output_file_name": "NLME_0_06_out.txt",
        "result": {
            "condition_num": 96.05601,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 502.968,
            "messages": "",
            "ofv": 322.968,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\06",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_09": {
        "control_file_name": "NLME_0_09.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_09.exe",
        "file_stem": "NLME_0_09",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  ranef(diag(nMeanDelayTime) = c(1))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  ranef(diag(nShapeParamMinusOne) = c(1))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  ranef(diag(nCl) = c(1))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  ranef(diag(nV) = c(1))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)])\n## Genotype: [1, 0]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 4,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 0, 0, 0",
                "IntCode": "1, 0",
                "MinBinCode": "0, 1, 0, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 4,
            "phenotype": "([('PML', 1)])",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 9,
        "output_file_name": "NLME_0_09_out.txt",
        "result": {
            "condition_num": 8.12408,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 601.7239999999999,
            "messages": "",
            "ofv": 411.724,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\09",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_10": {
        "control_file_name": "NLME_0_10.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_10.exe",
        "file_stem": "NLME_0_10",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), diag(nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nV, nCl))\n## Genotype: [1, 1]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 0, 0, 1",
                "IntCode": "1, 1",
                "MinBinCode": "0, 1, 0, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 1)]), block: ((nV, nCl))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 10,
        "output_file_name": "NLME_0_10_out.txt",
        "result": {
            "condition_num": 11.89886,
            "correlation": true,
            "covariance": true,
            "errors": "",
            "fitness": 276.7296,
            "messages": "",
            "ofv": 176.7296,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\10",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_11": {
        "control_file_name": "NLME_0_11.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_11.exe",
        "file_stem": "NLME_0_11",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), block(nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nV, nCl), (nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [1, 2]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 6,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 0, 1, 0",
                "IntCode": "1, 2",
                "MinBinCode": "0, 1, 0, 1, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 6,
            "phenotype": "([('PML', 1)]), block: ((nV, nCl), (nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 11,
        "output_file_name": "NLME_0_11_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 585.9204,
            "messages": "",
            "ofv": 175.9204,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\11",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_12": {
        "control_file_name": "NLME_0_12.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_12.exe",
        "file_stem": "NLME_0_12",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl, nShapeParamMinusOne) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0), diag(nMeanDelayTime) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nV, nCl, nShapeParamMinusOne))\n## Genotype: [1, 3]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 7,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 0, 1, 1",
                "IntCode": "1, 3",
                "MinBinCode": "0, 1, 0, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 7,
            "phenotype": "([('PML', 1)]), block: ((nV, nCl, nShapeParamMinusOne))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 12,
        "output_file_name": "NLME_0_12_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 596.7126000000001,
            "messages": "",
            "ofv": 176.7126,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\12",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_13": {
        "control_file_name": "NLME_0_13.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_13.exe",
        "file_stem": "NLME_0_13",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nV, nCl, nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [1, 4]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 10,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 1, 0, 0",
                "IntCode": "1, 4",
                "MinBinCode": "0, 1, 1, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 10,
            "phenotype": "([('PML', 1)]), block: ((nV, nCl, nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 13,
        "output_file_name": "NLME_0_13_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 625.6634,
            "messages": "",
            "ofv": 175.6634,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\13",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_14": {
        "control_file_name": "NLME_0_14.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_14.exe",
        "file_stem": "NLME_0_14",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(diag(nV) = c(1.0), block(nCl, nShapeParamMinusOne) = c(1.0, 0.0, 1.0), diag(nMeanDelayTime) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nCl, nShapeParamMinusOne))\n## Genotype: [1, 5]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 1, 0, 1",
                "IntCode": "1, 5",
                "MinBinCode": "0, 1, 1, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 1)]), block: ((nCl, nShapeParamMinusOne))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 14,
        "output_file_name": "NLME_0_14_out.txt",
        "result": {
            "condition_num": 5.53388,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 581.722,
            "messages": "",
            "ofv": 381.722,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\14",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_15": {
        "control_file_name": "NLME_0_15.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_15.exe",
        "file_stem": "NLME_0_15",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(diag(nV) = c(1.0), block(nCl, nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nCl, nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [1, 6]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 7,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 1, 1, 0",
                "IntCode": "1, 6",
                "MinBinCode": "0, 1, 1, 1, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 7,
            "phenotype": "([('PML', 1)]), block: ((nCl, nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 15,
        "output_file_name": "NLME_0_15_out.txt",
        "result": {
            "condition_num": 7.25877,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 397.03200000000004,
            "messages": "",
            "ofv": 177.032,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\15",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_16": {
        "control_file_name": "NLME_0_16.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_16.exe",
        "file_stem": "NLME_0_16",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Gamma)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(diag(nV, nCl) = c(1.0, 1.0), block(nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 1)]), block: ((nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [1, 7]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "0, 1, 1, 1, 1",
                "IntCode": "1, 7",
                "MinBinCode": "0, 1, 1, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 1)]), block: ((nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 16,
        "output_file_name": "NLME_0_16_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 577.2834,
            "messages": "",
            "ofv": 177.2834,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\16",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_17": {
        "control_file_name": "NLME_0_17.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_17.exe",
        "file_stem": "NLME_0_17",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  ranef(diag(nMeanDelayTime) = c(1))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  ranef(diag(nShapeParam) = c(1))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  ranef(diag(nCl) = c(1))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  ranef(diag(nV) = c(1))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)])\n## Genotype: [2, 0]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 4,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 0, 0, 0",
                "IntCode": "2, 0",
                "MinBinCode": "1, 0, 0, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 4,
            "phenotype": "([('PML', 2)])",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 17,
        "output_file_name": "NLME_0_17_out.txt",
        "result": {
            "condition_num": 8.18585,
            "correlation": true,
            "covariance": true,
            "errors": "",
            "fitness": 341.664,
            "messages": "",
            "ofv": 251.664,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\17",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_18": {
        "control_file_name": "NLME_0_18.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_18.exe",
        "file_stem": "NLME_0_18",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), diag(nShapeParam, nMeanDelayTime) = c(1.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nV, nCl))\n## Genotype: [2, 1]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 0, 0, 1",
                "IntCode": "2, 1",
                "MinBinCode": "1, 0, 0, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 2)]), block: ((nV, nCl))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 18,
        "output_file_name": "NLME_0_18_out.txt",
        "result": {
            "condition_num": 8.77275,
            "correlation": true,
            "covariance": true,
            "errors": "",
            "fitness": 349.868,
            "messages": "",
            "ofv": 249.868,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\18",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_19": {
        "control_file_name": "NLME_0_19.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_19.exe",
        "file_stem": "NLME_0_19",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), block(nShapeParam, nMeanDelayTime) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nV, nCl), (nShapeParam, nMeanDelayTime))\n## Genotype: [2, 2]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 6,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 0, 1, 0",
                "IntCode": "2, 2",
                "MinBinCode": "1, 0, 0, 1, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 6,
            "phenotype": "([('PML', 2)]), block: ((nV, nCl), (nShapeParam, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 19,
        "output_file_name": "NLME_0_19_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 653.664,
            "messages": "",
            "ofv": 243.664,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\19",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_20": {
        "control_file_name": "NLME_0_20.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_20.exe",
        "file_stem": "NLME_0_20",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(block(nV, nCl, nShapeParam) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0), diag(nMeanDelayTime) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nV, nCl, nShapeParam))\n## Genotype: [2, 3]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 7,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 0, 1, 1",
                "IntCode": "2, 3",
                "MinBinCode": "1, 0, 0, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 7,
            "phenotype": "([('PML', 2)]), block: ((nV, nCl, nShapeParam))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 20,
        "output_file_name": "NLME_0_20_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 664.614,
            "messages": "",
            "ofv": 244.614,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\20",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_21": {
        "control_file_name": "NLME_0_21.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_21.exe",
        "file_stem": "NLME_0_21",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(block(nV, nCl, nShapeParam, nMeanDelayTime) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nV, nCl, nShapeParam, nMeanDelayTime))\n## Genotype: [2, 4]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 10,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 1, 0, 0",
                "IntCode": "2, 4",
                "MinBinCode": "1, 0, 1, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 10,
            "phenotype": "([('PML', 2)]), block: ((nV, nCl, nShapeParam, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 21,
        "output_file_name": "NLME_0_21_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 688.892,
            "messages": "",
            "ofv": 238.892,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\21",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_22": {
        "control_file_name": "NLME_0_22.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_22.exe",
        "file_stem": "NLME_0_22",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(diag(nV) = c(1.0), block(nCl, nShapeParam) = c(1.0, 0.0, 1.0), diag(nMeanDelayTime) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nCl, nShapeParam))\n## Genotype: [2, 5]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 1, 0, 1",
                "IntCode": "2, 5",
                "MinBinCode": "1, 0, 1, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 2)]), block: ((nCl, nShapeParam))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 22,
        "output_file_name": "NLME_0_22_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 647.16,
            "messages": "",
            "ofv": 247.16,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\22",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_23": {
        "control_file_name": "NLME_0_23.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_23.exe",
        "file_stem": "NLME_0_23",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(diag(nV) = c(1.0), block(nCl, nShapeParam, nMeanDelayTime) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nCl, nShapeParam, nMeanDelayTime))\n## Genotype: [2, 6]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 7,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 1, 1, 0",
                "IntCode": "2, 6",
                "MinBinCode": "1, 0, 1, 1, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 7,
            "phenotype": "([('PML', 2)]), block: ((nCl, nShapeParam, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 23,
        "output_file_name": "NLME_0_23_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 660.6,
            "messages": "",
            "ofv": 240.6,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\23",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_24": {
        "control_file_name": "NLME_0_24.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_24.exe",
        "file_stem": "NLME_0_24",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParam, out = - Cl * C, dist = InverseGaussian)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParam = tvShapeParam * exp( nShapeParam ))\n  fixef(tvShapeParam= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParam, nMeanDelayTime)\n  ranef(diag(nV, nCl) = c(1.0, 1.0), block(nShapeParam, nMeanDelayTime) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 2)]), block: ((nShapeParam, nMeanDelayTime))\n## Genotype: [2, 7]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 0, 1, 1, 1",
                "IntCode": "2, 7",
                "MinBinCode": "1, 0, 1, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 2)]), block: ((nShapeParam, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 24,
        "output_file_name": "NLME_0_24_out.txt",
        "result": {
            "condition_num": 60.97262,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 443.606,
            "messages": "",
            "ofv": 243.606,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\24",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_25": {
        "control_file_name": "NLME_0_25.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_25.exe",
        "file_stem": "NLME_0_25",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  ranef(diag(nMeanDelayTime) = c(1))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  ranef(diag(nShapeParamMinusOne) = c(1))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  ranef(diag(nCl) = c(1))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  ranef(diag(nV) = c(1))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)])\n## Genotype: [3, 0]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 4,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 0, 0, 0",
                "IntCode": "3, 0",
                "MinBinCode": "1, 1, 0, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 4,
            "phenotype": "([('PML', 3)])",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 25,
        "output_file_name": "NLME_0_25_out.txt",
        "result": {
            "condition_num": 14.03531,
            "correlation": true,
            "covariance": true,
            "errors": "",
            "fitness": 280.53380000000004,
            "messages": "",
            "ofv": 190.5338,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\25",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_26": {
        "control_file_name": "NLME_0_26.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_26.exe",
        "file_stem": "NLME_0_26",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), diag(nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nV, nCl))\n## Genotype: [3, 1]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 0, 0, 1",
                "IntCode": "3, 1",
                "MinBinCode": "1, 1, 0, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 3)]), block: ((nV, nCl))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 26,
        "output_file_name": "NLME_0_26_out.txt",
        "result": {
            "condition_num": 15.15914,
            "correlation": true,
            "covariance": true,
            "errors": "",
            "fitness": 289.366,
            "messages": "",
            "ofv": 189.366,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\26",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_27": {
        "control_file_name": "NLME_0_27.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_27.exe",
        "file_stem": "NLME_0_27",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl) = c(1.0, 0.0, 1.0), block(nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nV, nCl), (nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [3, 2]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 6,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 0, 1, 0",
                "IntCode": "3, 2",
                "MinBinCode": "1, 1, 0, 1, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 6,
            "phenotype": "([('PML', 3)]), block: ((nV, nCl), (nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 27,
        "output_file_name": "NLME_0_27_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 598.9110000000001,
            "messages": "",
            "ofv": 188.911,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\27",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_28": {
        "control_file_name": "NLME_0_28.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_28.exe",
        "file_stem": "NLME_0_28",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl, nShapeParamMinusOne) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0), diag(nMeanDelayTime) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nV, nCl, nShapeParamMinusOne))\n## Genotype: [3, 3]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 7,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 0, 1, 1",
                "IntCode": "3, 3",
                "MinBinCode": "1, 1, 0, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 7,
            "phenotype": "([('PML', 3)]), block: ((nV, nCl, nShapeParamMinusOne))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 28,
        "output_file_name": "NLME_0_28_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 606.8474,
            "messages": "",
            "ofv": 186.8474,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\28",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_29": {
        "control_file_name": "NLME_0_29.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_29.exe",
        "file_stem": "NLME_0_29",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nV, nCl, nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [3, 4]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 10,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 1, 0, 0",
                "IntCode": "3, 4",
                "MinBinCode": "1, 1, 1, 0, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 10,
            "phenotype": "([('PML', 3)]), block: ((nV, nCl, nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 29,
        "output_file_name": "NLME_0_29_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 636.6025999999999,
            "messages": "",
            "ofv": 186.6026,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\29",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_30": {
        "control_file_name": "NLME_0_30.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_30.exe",
        "file_stem": "NLME_0_30",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(diag(nV) = c(1.0), block(nCl, nShapeParamMinusOne) = c(1.0, 0.0, 1.0), diag(nMeanDelayTime) = c(1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nCl, nShapeParamMinusOne))\n## Genotype: [3, 5]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 1, 0, 1",
                "IntCode": "3, 5",
                "MinBinCode": "1, 1, 1, 0, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 3)]), block: ((nCl, nShapeParamMinusOne))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 30,
        "output_file_name": "NLME_0_30_out.txt",
        "result": {
            "condition_num": 15.8055,
            "correlation": false,
            "covariance": true,
            "errors": "",
            "fitness": 389.32259999999997,
            "messages": "",
            "ofv": 189.3226,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\30",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_31": {
        "control_file_name": "NLME_0_31.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_31.exe",
        "file_stem": "NLME_0_31",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(diag(nV) = c(1.0), block(nCl, nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nCl, nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [3, 6]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 7,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 1, 1, 0",
                "IntCode": "3, 6",
                "MinBinCode": "1, 1, 1, 1, 0"
            },
            "non_influential_token_num": 0,
            "omega_num": 7,
            "phenotype": "([('PML', 3)]), block: ((nCl, nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 31,
        "output_file_name": "NLME_0_31_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 609.016,
            "messages": "",
            "ofv": 189.016,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\31",
        "source": "saved",
        "status": "Done"
    },
    "NLME_0_32": {
        "control_file_name": "NLME_0_32.mmdl",
        "engine_adapter": "nlme",
        "executable_file_name": "NLME7_0_32.exe",
        "file_stem": "NLME_0_32",
        "generation": "0",
        "model": {
            "control": "##Description: SearchTlag and Omega Search\n##Author: Certara\n##DATA .\\examples\\NLME\\user\\Example3/OneCpt_OralBolus.csv\n##MAP    A1 = Dose CObs = CObs id = ID time = time\n##MODEL test() {\n  delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C, dist = Weibull)\n  C = A1 / V\n  dosepoint(A1, idosevar = A1Dose, infdosevar = A1InfDose, infratevar = A1InfRate)\n  error(CEps = 0.1)\n  observe(CObs = C * (1 + CEps))\n\n  stparm(MeanDelayTime = tvMeanDelayTime * exp( nMeanDelayTime ))\n  fixef(tvMeanDelayTime= c(, 1, ))\n  stparm(ShapeParamMinusOne = tvShapeParamMinusOne * exp( nShapeParamMinusOne ))\n  fixef(tvShapeParamMinusOne= c(, 1, ))\n  stparm(Cl = tvCl * exp( nCl ))\n  fixef(tvCl= c(, 1, ))\n  stparm(V = tvV * exp( nV ))\n  fixef(tvV= c(, 1, ))\n  #search_block(nV, nCl, nShapeParamMinusOne, nMeanDelayTime)\n  ranef(diag(nV, nCl) = c(1.0, 1.0), block(nShapeParamMinusOne, nMeanDelayTime) = c(1.0, 0.0, 1.0))\n  }\n##ESTARGS\n\n##TABLES\n\n\n## Phenotype: ([('PML', 3)]), block: ((nShapeParamMinusOne, nMeanDelayTime))\n## Genotype: [3, 7]\n## Num non-influential tokens: 0\n",
            "estimated_omega_num": 5,
            "estimated_sigma_num": 1,
            "estimated_theta_num": 4,
            "model_code": {
                "FullBinCode": "1, 1, 1, 1, 1",
                "IntCode": "3, 7",
                "MinBinCode": "1, 1, 1, 1, 1"
            },
            "non_influential_token_num": 0,
            "omega_num": 5,
            "phenotype": "([('PML', 3)]), block: ((nShapeParamMinusOne, nMeanDelayTime))",
            "sigma_num": 1,
            "theta_num": 4
        },
        "model_num": 32,
        "output_file_name": "NLME_0_32_out.txt",
        "result": {
            "condition_num": 99999999,
            "correlation": false,
            "covariance": false,
            "errors": "",
            "fitness": 590.0474,
            "messages": "",
            "ofv": 190.0474,
            "post_run_python_penalty": 0,
            "post_run_python_text": "",
            "post_run_r_penalty": 0,
            "post_run_r_text": "",
            "success": true
        },
        "run_dir": ".\\pydarwin\\Example3\\temp\\0\\32",
        "source": "saved",
        "status": "Done"
    }
}